const configCmd = {
    name: 'info',
    version: '1.1.1',
    hasPermssion: 0,
    credits: 'Raiden Makoto',
    description: 'Thi·∫øt l·∫≠p th√¥ng tin v·ªÅ b·∫°n',
    commandCategory: 'Box chat',
    usages: '< ...|setup|del|avatar >',
    cooldowns: 3
},
fse = require('fs-extra'),
axios = require('axios'),
pathS = __dirname+'/noprefix/savedInfo.json',
streamURL = async url => (await axios.get(url, {
    responseType: 'stream'
})).data,
formInfo = {
    info: [['ùóßùó≤ÃÇùóª'], ['ùó°ùó¥ùóÆÃÄùòÜ ùòÄùó∂ùóªùóµ'], ['ùóïùó∂ùó≤Ã£ÃÇùòÅ ùó±ùóÆùóªùóµ'], ['ùó°ùóºÃõùó∂ ùóºÃõÃâ'], ['ùó§ùòÇùó≤ÃÇ ùóæùòÇùóÆÃÅùóª'], ['ùó¶ùóºÃõÃâ ùòÅùóµùó∂ÃÅùó∞ùóµ'], ['ùóñùóµùó∂ùó≤ÃÇÃÄùòÇ ùó∞ùóÆùóº'], ['ùóöùó∂ùóºÃõÃÅùó∂ ùòÅùó∂ÃÅùóªùóµ'], ['ùó†ùóºÃÇÃÅùó∂ ùóæùòÇùóÆùóª ùóµùó≤Ã£ÃÇ'], ['ùóßùó∂ùó≤ÃÇÃâùòÇ ùòÄùòÇÃõÃâ']]};

function swapInArray(a, x, y) {
    b = a[x]
    a[x] = a[y]
    a[y] = b;
    return a;
};

function upperFirstLetter(content) {
    return content.split(' ').map(el=> {
        el = el.split('')
        el[0] = el[0].toUpperCase()
        return el.join('');
    }).join(' ')
};

function loadCmd() {
    if (!fse.existsSync(pathS)) fse.writeFileSync(pathS, '{"user":{}}');
};

async function runCmd(arg) {
    const {
        senderID: sid,
        threadID: tid,
        type,
        messageReply,
        mentions
    } = arg.event,
    id = type == 'message_reply'?messageReply.senderID: (tags = Object.keys(mentions), tags != 0)?tags[0]: sid,
    prefix = arg.event.args[0][0],
    out = (a, b, c, d) => arg.api.sendMessage(a, b?b: tid, c?c: null, d?d: arg.event.messageID),
    dataInfo = JSON.parse(fse.readFileSync(pathS))

    if (/^setup/.test(arg.args[0])) {
        if (!dataInfo.user[sid]) {
            dataInfo.user[sid] = formInfo;
            fse.writeFileSync(pathS, JSON.stringify(dataInfo, 0, 4))
        }
        return out(`üå∏=== [ ùó¶ùóòùóßùó®ùó£ ùóúùó°ùóôùó¢ ] ===üå∏\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n${dataInfo.user[sid].info.map((el, idx)=>`${idx+1}. ${el[0]}: ${!!el[1]?el.pop(): 'Ch∆∞a c√≥ d·ªØ li·ªáu'}`).join('\n')}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n${upperFirstLetter('‚Ä¢ ùó£ùóµùóÆÃâùóª ùóµùóºÃÇÃÄùó∂ + [ ùó¶ùóßùóß ]\n( ùó´ùóºùóÆÃÅ ùòÅùóµùóºÃÇùóªùó¥ ùòÅùó∂ùóª )\n‚Ä¢ ùó£ùóµùóÆÃâùóª ùóµùóºÃÇÃÄùó∂ + [ ùó¶ùóßùóß ] + [ ùó°ùóºÃ£ÃÇùó∂ ùó±ùòÇùóªùó¥ ]\n( ùóßùóµùó≤ÃÇùó∫ ùòÅùóµùóºÃÇùóªùó¥ ùòÅùó∂ùóª )\n‚Ä¢ ùó£ùóµùóÆÃâùóª ùóµùóºÃÇÃÄùó∂ + [ ùó¶ùóßùóß ] -> [ ùó¶ùóßùóß ]\n( ùóñùóµùòÇùòÜùó≤ÃÇÃâùóª ùòÉùó∂Ã£ ùòÅùóøùó∂ÃÅ )\n‚Ä¢ ùó¶ùòÇÃõÃâ ùó±ùòÇÃ£ùóªùó¥ /ùó∂ùóªùó≥ùóº ùóÆùòÉùòÅ + [ ùóüùóúùó°ùóû ]\n( ùóüùóÆÃÄùó∫ ùóÆùòÉùóÆùòÅùóÆùóø )\n‚Ä¢ ùó¶ùòÇÃõÃâ ùó±ùòÇÃ£ùóªùó¥ /ùó∂ùóªùó≥ùóº ùó±ùó≤ùóπ ùóµùóºùóÆÃ£ÃÜùó∞ /ùó∂ùóªùó≥ùóº ùóøùó≤ùòÄùó≤ùòÅ ùóªùó≤ÃÇÃÅùòÇ ùó∫ùòÇùóºÃÇÃÅùóª ùóπùóÆÃÄùó∫ ùó∫ùóºÃõÃÅùó∂ ùòÅùóºùóÆÃÄùóª ùóØùóºÃ£ÃÇ ùó∂ùóªùó≥ùóº')}`, '', (err, dataMsg) => global.client.handleReply.push({
            name: configCmd.name, messageID: dataMsg.messageID, author: sid, chooses: 'setup'
        }));
    };

    if (!dataInfo.user[id]) return out(sid != id?'[ ùêàùêçùêÖùêé ] ‚Ä¢ ùó°ùó¥ùòÇÃõùóºÃõÃÄùó∂ ùó±ùòÇÃÄùóªùó¥ ùóªùóÆÃÄùòÜ ùó∞ùóµùòÇÃõùóÆ ùó∞ùóºÃÅ ùòÅùóµùóºÃÇùóªùó¥ ùòÅùó∂ùóª ùòÅùóøùóºùóªùó¥ ùóµùó≤Ã£ÃÇ ùòÅùóµùóºÃÇÃÅùóªùó¥': `[ ùêàùêçùêÖùêé ] ‚Ä¢ ùóïùóÆÃ£ùóª ùó∞ùóµùòÇÃõùóÆ ùó∞ùóºÃÅ ùòÅùóµùóºÃÇùóªùó¥ ùòÅùó∂ùóª, ùó±ùòÇÃÄùóªùó¥ "${prefix}${configCmd.name} setup" ùòÉùóÆÃÄ ùòÅùóµùó≤ÃÇùó∫ ùòÅùóµùóºÃÇùóªùó¥ ùòÅùó∂ùóª ùó∞ùòÇÃâùóÆ ùó∫ùó∂ÃÄùóªùóµ ùóªùóµùó≤ÃÅ`);

    if (/^(avatar|avt)/.test(arg.args[0])) {
        if (!/^https:\/\/[a-zA-Z0-9\.\/\-\_\#]+\.(png|jpg|jpge|JPGE|gif)$/.test(arg.args[1])) return out(`[ ùêàùêçùêÖùêé ] ‚Ä¢ ùóñùóµùó∂Ãâ ùóªùóµùóÆÃ£ÃÇùóª ùóπùó∂ùóªùó∏ ùóÆÃâùóªùóµ (ùó∑ùóΩùó¥, ùó∑ùóΩùó¥ùó≤, ùóΩùóªùó¥, ùó¥ùó∂ùó≥)`);
        dataInfo.user[sid].avatar = arg.args[1];
        fse.writeFileSync(pathS, JSON.stringify(dataInfo, 0, 4));
        return out(`[ ùêàùêçùêÖùêé ] ‚Ä¢ ùóßùóµùó≤ÃÇùó∫ ùóÆùòÉùóÆùòÅùóÆùóø ùòÅùóµùóÆÃÄùóªùóµ ùó∞ùóºÃÇùóªùó¥`);
    };

    if (/^(del|reset)/.test(arg.args[0])) {
        delete dataInfo.user[sid];
        fse.writeFileSync(pathS, JSON.stringify(dataInfo, 0, 4));
        return out(`[ ùêàùêçùêÖùêé ] ‚Ä¢ ùó´ùóºùóÆÃÅ ùòÅùóµùóÆÃÄùóªùóµ ùó∞ùóºÃÇùóªùó¥ ùòÅùóºùóÆÃÄùóª ùóØùóºÃ£ÃÇ ùòÅùóµùóºÃÇùóªùó¥ ùòÅùó∂ùóª ùó∞ùòÇÃâùóÆ ùóØùóÆÃ£ùóª`);
    };

    const msg = {};

    if ((avt = dataInfo.user[sid].avatar), !!avt) msg.attachment = await streamURL(avt);
    msg.body = "=== [ ùóúùó°ùóôùó¢ ùóôùóîùóñùóòùóïùó¢ùó¢ùóû ] ===\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n" + dataInfo.user[id].info.map(el => `‚Ä¢ ${upperFirstLetter(el[0])}: ${!!el[1]?el.pop(): 'Ch∆∞a c√≥ d·ªØ li·ªáu'}`).join('\n');
    out(msg);
};

function reply(arg) {
    const {
        senderID: sid,
        threadID: tid,
        body
    } = arg.event,
    _ = arg.handleReply,
    prefix = arg.event.args[0][0],
    out = (a, b, c, d) => arg.api.sendMessage(a, b?b: tid, c?c: null, d?d: arg.event.messageID),
    dataInfo = JSON.parse(fse.readFileSync(pathS))

    if (sid != _.author)return;
    if (/^setup/.test(_.chooses)) {
        var txt = '',
        input = /\n/.test(body)? body.split('\n'): [body];
        for (const el of input) {
            if (/[0-9] \-> [0-9]/.test(el)) {
                const a = el.split(' -> '),
                x = a[0],
                y = a[1]
                swapInArray(dataInfo.user[sid].info, x-1, y-1);
                txt += `- Di chuy·ªÉn v·ªã tr√≠ "${x}" qua "${y}"`;
            } else if (isNaN(el)) {
                const edit = el.split(' '),
                index = edit.shift()-1;

                if (/:$/.test(edit[0])) {
                    if (!dataInfo.user[sid].info[index]) dataInfo.user[sid].info[index] = [];
                    const newI = edit[0].replace(':', '');
                    dataInfo.user[sid].info[index][0] = newI;
                    txt += `\n- C·∫≠p nh·∫≠t ngo·∫°i h√¨nh "${newI}"`
                    edit.shift();
                }
                const content = edit.join(' ')
                dataInfo.user[sid].info[index].push(content);
                txt += `\n- C·∫≠p nh·∫≠t th√¥ng tin`
            } else if (isFinite(el)) {
                const del = dataInfo.user[sid].info.splice(el-1, 1);
                txt += `\n- G·ª° th√¥ng tin "${del[0]}: ${del.pop()}"`
            }
        };
        dataInfo.user[sid].info = dataInfo.user[sid].info.filter(el=>!!el);
        fse.writeFileSync(pathS, JSON.stringify(dataInfo, 0, 4))
        out(txt)
    };
};

module.exports = {
    config: configCmd,
    onLoad: loadCmd,
    run: runCmd,
    handleReply: reply
}