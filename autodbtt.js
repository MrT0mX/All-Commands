module.exports.config = {
    name: 'dbtt',
    version: 'beta',
    hasPermssion: 0,
    credits: 'DC-Nam',// Bok idea th·ªùi ti·∫øt
    description: 'T·ª± ƒë·ªông g·ª≠i tin nh·∫Øn theo gi·ªù ƒë√£ c√†i!',
    commandCategory: 'H·ªá th·ªëng',
    usages: '[]',
    cooldowns: 3
};
const nam = [{
    timer: '7:00:00 AM',
    message: ['‚õÖ==„Äå ùóóùòÇÃõÃ£ ùóïùóÆÃÅùóº ùóßùóµùóºÃõÃÄùó∂ ùóßùó∂ùó≤ÃÇÃÅùòÅ „Äç==‚õÖ\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n{abc}']
}];
module.exports.onLoad = o => setInterval(async() => {
    const r = a => a[Math.floor(Math.random()*a.length)];
    if (a = nam.find(i => i.timer == new Date(Date.now()+25200000).toLocaleString().split(/,/).pop().trim())){
     const axios = require('axios');
  const res = await axios.get(`https://api.popcat.xyz/weather?q=${encodeURI('H·ªì Ch√≠ Minh')}`);
    var abc = `‚õàÔ∏è Th·ªùi ti·∫øt t·∫°i ${res.data[0].location.name}\nüìÜ ${res.data[0].current.day} ${res.data[0].current.date}\nüå° Nhi·ªát ƒë·ªô: ${res.data[0].current.temperature}¬∞${res.data[0].location.degreetype}\nüí¨ M√¥ t·∫£: ${res.data[0].current.skytext}\nüí¶ ƒê·ªô ·∫©m: ${res.data[0].current.humidity}\nüí® H∆∞·ªõng gi√≥: ${res.data[0].current.winddisplay}\nüìù Ghi nh·∫≠n l√∫c: ${res.data[0].current.observationtime}\nüî≠ ƒê√¢y l√† trung t√¢m d·ª± b√°o th·ªùi ti·∫øt c·ªßa TuanDeepTry`;
      
   global.data.allThreadID.forEach(i => o.api.sendMessage(r(a.message).replace(/{abc}/g, abc), i));
    };
}, 1000);

module.exports.run = async o => {
  try{
  const axios = global.nodemodule["axios"];
  const fs = global.nodemodule["fs-extra"];
  const request = global.nodemodule["request"];
  const { api, event, args } = o;
	const { threadID, messageID } = event;
  var bok = args.join(" ");
  if(!bok) return api.sendMessage("nh·∫≠p t·ªânh/tp c·∫ßn xem th·ªùi ti·∫øt", threadID);
  const res = await axios.get(`https://api.popcat.xyz/weather?q=${encodeURI(bok)}`);
  const bokk = res.data[0].forecast;
  var text = `Th·ªùi ti·∫øt c·ªßa: ${bok} v√†o c√°c ng√†y`;
  for (let i = 0; i < 5; i++) {
    text += `\n${i+1}-> ${bokk[i].day} ${bokk[i].date}\n=>Nhi·ªát ƒë·ªô d·ª± b√°o: t·ª´ ${bokk[i].low} ƒë·∫øn ${bokk[i].high}\n=>M√¥ t·∫£: ${bokk[i].skytextday}\n=>T·ª∑ l·ªá m∆∞a: ${bokk[i].precip}\n`
  };
  api.sendMessage(text, threadID, messageID)
  }catch(err){api.sendMessage(`${err}`, threadID)}
  }